#!/bin/bash

# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

declare BATCHKIT_OLD=$(yolk -V $pypiBatchkit | cut -c$((${#pypiBatchkit} + 2))-100)
declare BATCHKIT_NEW=$(python $setupBatchkit --version)
echo INFO: Latest published \'$pypiBatchkit\' is version \'$BATCHKIT_OLD\'. New \'$pypiBatchkit\' is version \'$BATCHKIT_NEW\'

declare BATCHKIT_EX_OLD=$(yolk -V $pypiExamples | cut -c$((${#pypiExamples} + 2))-100)
declare BATCHKIT_EX_NEW=$(python $setupExamples --version)
echo INFO: Latest published \'$pypiExamples\' is version \'$BATCHKIT_EX_OLD\'. New \'$pypiExamples\' is version \'$BATCHKIT_EX_NEW\'

EXIT=false
if [ "$BATCHKIT_OLD" = "$BATCHKIT_NEW" ]
then 
    echo ERROR: Increment Python package version for \'$pypiBatchkit\'. Current package version is the same as published package version
    EXIT=true
fi

if [ "$BATCHKIT_EX_OLD" = "$BATCHKIT_EX_NEW" ]
then 
    echo ERROR: Increment Python package version for \'$pypiExamples\'. Current package version is the same as published package version
    EXIT=true
fi

if [ "$BATCHKIT_NEW" != "$BATCHKIT_EX_NEW" ]
then 
    echo ERROR: Python package versions for \'$pypiBatchkit\' and \'$pypiExamples\' must match
    EXIT=true
else
    echo INFO: Python package versions for \'$pypiBatchkit\' and \'$pypiExamples\' match as expected
fi

if [ "$EXIT" = true ]
then 
    exit 1
fi
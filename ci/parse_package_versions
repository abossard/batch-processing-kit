#!/bin/bash

# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

# to only publish batchkit_examples and NOT batchkit pypi package (lower priority)
    # from pipeline cmd, do git diff to determine which files were actually modified between head and head-1
    # would still have GitHub repo versions match but would ONLY publish pypi package that was actually modified as determined by git diff

# FOR NOW
# compare the versions
# publish both to Pypi simultaneously and fail pipeline if version not incremented
# versions of batchkit and batchkit_examples should match programmatically since importing version.txt into setup.py fileS 

declare BATCHKIT_OLD=$(yolk -V $pypiBatchkit | cut -c$((${#pypiBatchkit} + 2))-100)
declare BATCHKIT_NEW=$(python $setupBatchkit --version)
echo INFO: Latest published \'$pypiBatchkit\' is version \'$BATCHKIT_OLD\'. New \'$pypiBatchkit\' is version \'$BATCHKIT_NEW\'

declare BATCHKIT_EX_OLD=$(yolk -V $pypiExamples | cut -c$((${#pypiExamples} + 2))-100)
declare BATCHKIT_EX_NEW=$(python $setupExamples --version)
echo INFO: Latest published \'$pypiExamples\' is version \'$BATCHKIT_EX_OLD\'. New \'$pypiExamples\' is version \'$BATCHKIT_EX_NEW\'

EXIT=false
if [ "$BATCHKIT_OLD" = "$BATCHKIT_NEW" ]
then 
    echo ERROR: Increment Python package version for \'$pypiBatchkit\'. Current package version is the same as published package version
    EXIT=true
fi

if [ "$BATCHKIT_EX_OLD" = "$BATCHKIT_EX_NEW" ]
then 
    echo ERROR: Increment Python package version for \'$pypiExamples\'. Current package version is the same as published package version
    EXIT=true
fi

if [ "$BATCHKIT_NEW" != "$BATCHKIT_EX_NEW" ]
then 
    echo ERROR: Python package versions for \'$pypiBatchkit\' and \'$pypiExamples\' must match
    EXIT=true
else
    echo INFO: Python package versions for \'$pypiBatchkit\' and \'$pypiExamples\' match as expected
fi

if [ "$EXIT" = true ]
then 
    exit 1
fi